pipeline {
    agent any

    environment {
        token = 'DZnyy741L7T6j9IWbrldx6Mur6LgZAtF7jNaQlodfjg'
        jobName = "${JOB_NAME} ${BRANCH_NAME != null ? BRANCH_NAME : ''}"
        buildNo = "${BUILD_NUMBER}"
        Job_url = "${BUILD_URL}"
        url = 'https://notify-api.line.me/api/notify'
        url_monitor = 'http://192.168.41.66:27901/?password=secret'
        message_Pre = "${jobName} Build #${buildNo} กำลังทดสอบ กดlink เพื่อดูจอแสดงผล ${url_monitor}"
        allureReportPath = 'reports'
    }

    stages {
        stage('AllureSetup') {
            steps {
                script {
                    allureReportPaths = []  // List to store Allure report paths
                }
            }
        }
        stage('Line Notify (pre build)') {
            steps {
                // Send Line Notify message before the build starts
                script {
                    sh "curl $url -H \"Authorization: Bearer $token \" -F \"message=${message_Pre}\""
                }
            }
        }
        
        stage('Run Tests') {
            steps {
                sleep 5
                catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
                    // Run pytest command and generate test result data
                    sh 'pytest ggez.py --alluredir=Reports'
                }
                    // Append Allure report path to the list
                    script {
                        allureReportPaths.add("${allureReportPath}/")
                    }
            }
        }
    }

    post {
        always {
            // Send Line Notify message based on build result and stage status
            script {
                if (currentBuild.result == 'FAILURE') {
                    def message = "Build #${BUILD_NUMBER} of ${JOB_NAME} FAILED. Check the build status in the Jenkins job page: ${BUILD_URL}"
                    sh "curl $url -H \"Authorization: Bearer $token\" -F \"message=${message}\""
                    sh "for file in Reports/*.png; do curl $url -H \"Authorization: Bearer $token\" -F \"imageFile=@${file}\"; done"
                } else if (currentBuild.result == 'SUCCESS') {
                    def message = "Build #${BUILD_NUMBER} of ${JOB_NAME} was SUCCESSFUL. Check the build status in the Jenkins job page: ${BUILD_URL}"
                    sh "curl $url -H \"Authorization: Bearer $token\" -F \"message=${message}\""
                }
            }
        }
    }
}
